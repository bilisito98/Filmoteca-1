{"mappings":"AAAA,MAGMA,EACM,qBADNA,EAIG,kBAEHC,EACOC,eAAgBC,EAAO,GAChC,IACE,MAAMC,EAAM,+BAAcJ,6CAAyCA,UAAyBG,IACtFE,QAAiBC,MAAMF,GACvBG,QAAeF,EAASG,OAE9B,OADAC,QAAQC,IAAIH,GACLA,EAAOI,O,CACd,MAAOC,GACPH,QAAQC,IAAI,oBACZD,QAAQG,MAAMA,E,GAKdC,EAAY,CAChB,GAAI,YACJ,GAAI,UACJ,GAAI,YACJ,GAAI,QACJ,GAAI,SACJ,GAAI,SACJ,GAAI,SACJ,GAAI,UACJ,GAAI,UACJ,GAAI,WACJ,GAAI,QACJ,GAAI,cACJ,IAAK,kBACL,KAAM,UACN,MAAO,QACP,MAAO,UACP,MAAO,SACP,MAAO,MACP,MAAO,YAoBT,IAAIC,EAAc,EACdC,EAAS,GACb,MAAMC,EAAcC,SAASC,cAAc,eAGrCC,EAAc,CAClBC,aAAc,SAAUb,GACtBQ,GAAUR,EACPc,KAAI,EAACC,YAAEA,EAAWC,eAAEA,EAAcC,aAAEA,EAAYC,UAAEA,KAC1C,2IACsDH,kHAE9BC,+CA7BvC,SAAiBG,GACf,MAAMC,EAAMD,EAAME,OAClB,GAAY,IAARD,EAAW,MAAO,GAEtB,IAAIE,EAAI,GACR,IAAK,IAAIC,EAAI,EAAGA,EAAIC,KAAKC,IAAI,EAAGL,GAAMG,GAAK,EACzCD,EAAEI,MAOWC,EAPER,EAAMI,GAQhBjB,EAAUqB,IAAO,iBAAiBA,OAD3C,IAAiBA,EAHf,OAFIP,EAAM,GAAGE,EAAEI,KAAK,SAEbJ,EAAEM,KAAK,K,CAoBsBC,CACxBX,kCAC+BD,oCAGtCW,KAAK,IACRnB,EAAYqB,UAAYtB,C,EAE1BuB,iBAAkBpC,iBAChB,MAAMK,QAAeN,EAAmBa,GACxC,OAAOyB,KAAKnB,aAAab,E,GAI7BY,EAAYmB,mBAGZ,MAAME,EAASvB,SAASC,cAAc,SAEhCuB,EAASxB,SAASC,cAAc,SAEtCsB,EAAOE,iBAAiB,SAAUC,IAEhC,GADA5B,EAAS,GACgB,OAArB4B,EAAEC,OAAOC,SAAyC,SAArBF,EAAEC,OAAOC,SAA2C,MAArBF,EAAEC,OAAOC,QAAiB,CACxF,GAAG/B,EAAY,EAEb,YADAgC,MAAM,sBAGRhC,IACAK,EAAYmB,kB,KAIhBG,EAAOC,iBAAiB,SAAUC,IAEhC,GADA5B,EAAS,GACgB,OAArB4B,EAAEC,OAAOC,SAAyC,SAArBF,EAAEC,OAAOC,SAA2C,MAArBF,EAAEC,OAAOC,QAAkB,CACzF,GAAG/B,EAAY,IAEb,YADAgC,MAAM,yBAGRhC,IACAK,EAAYmB,kB","sources":["src/components/body.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '2e9f8fc9479fa19131d9c8fc8ea7c110';\n\nconst categories = {\n  trending: '/trending/all/week',\n  querySearch: '/search/movie',\n  genre: '/genre/movie/list',\n  basic: '&language=en-US',\n};\nconst services = {\n  getMovies: async function (page = 1) {\n    try {\n      const url = `${BASE_URL}${categories.trending}?api_key=${API_KEY}${categories.basic}&page=${page}`;\n      const response = await fetch(url);\n      const movies = await response.json();\n      console.log(movies);\n      return movies.results;\n    } catch (error) {\n      console.log('hola desde error');\n      console.error(error);\n    }\n  },\n};\n\nconst genresAll = {\n  12: 'Adventure',\n  14: 'Fantasy',\n  16: 'Animation',\n  18: 'Drama',\n  27: 'Horror',\n  28: 'Action',\n  35: 'Comedy',\n  36: 'History',\n  37: 'Western',\n  53: 'Thriller',\n  80: 'Crime',\n  99: 'Documentary',\n  878: 'Science Fiction',\n  9648: 'Mystery',\n  10402: 'Music',\n  10749: 'Romance',\n  10751: 'Family',\n  10752: 'War',\n  10770: 'TV Movie',\n};\n\nfunction getSome(idArr) {\n  const len = idArr.length;\n  if (len === 0) return '';\n\n  let n = [];\n  for (let i = 0; i < Math.min(2, len); i += 1) {\n    n.push(getName(idArr[i]));\n  }\n  if (len > 2) n.push('Other');\n\n  return n.join(', ');\n}\n\nfunction getName(id) {\n  return genresAll[id] || `Unknown genre(${id})`;\n}\n\nlet currentPage = 1;\nlet markup = '';\nconst cardsMovies = document.querySelector('.cardsMovie');\nconst baseImageUrl = 'https://image.tmdb.org/t/p/';\n\nconst layoutUtils = {\n  renderImages: function (movies) {\n    markup += movies\n      .map(({ poster_path, original_title, release_date, genre_ids }) => {\n        return `<li class=\"movie-card\" onclick=\"addModalPoster(event)\">\n            <img class='cardsMovie__image' src='${baseImageUrl}w500${poster_path}' alt='image movie' data-toggle=\"modal\" data-target=\"#posterModal\" />\n\n            <h2 class=\"movie__title\">${original_title}</h2>\n            <p class=\"movie__genre\">${getSome(\n              genre_ids\n            )}<span class=\"movie__popular\">${release_date}</span></p>\n            </li>`;\n      })\n      .join('');\n    cardsMovies.innerHTML = markup;\n  },\n  refreshMovieList: async function () {\n    const movies = await services.getMovies(currentPage);\n    return this.renderImages(movies);\n  },\n};\n\nlayoutUtils.refreshMovieList();\n\n\nconst liPrev = document.querySelector('.prev');\n\nconst liNext = document.querySelector('.next');\n\nliPrev.addEventListener('click', (e)=>{\n  markup = '';\n  if (e.target.tagName === 'LI' || e.target.tagName === 'SPAN' || e.target.tagName === 'I') {\n    if(currentPage<1){\n      alert('Has llegado a la 1')\n      return;\n    }\n    currentPage--;\n    layoutUtils.refreshMovieList();\n  }\n})\n\nliNext.addEventListener('click', (e)=>{\n  markup = '';\n  if (e.target.tagName === 'LI' || e.target.tagName === 'SPAN' || e.target.tagName === 'I' ) {\n    if(currentPage>1000){\n      alert('Has llegado a la 1000')\n      return;\n    }\n    currentPage++;\n    layoutUtils.refreshMovieList();\n  }\n})"],"names":["$5dc247100a59b44f$var$categories","$5dc247100a59b44f$var$services","async","page","url","response","fetch","movies","json","console","log","results","error","$5dc247100a59b44f$var$genresAll","$5dc247100a59b44f$var$currentPage","$5dc247100a59b44f$var$markup","$5dc247100a59b44f$var$cardsMovies","document","querySelector","$5dc247100a59b44f$var$layoutUtils","renderImages","map","poster_path","original_title","release_date","genre_ids","idArr","len","length","n","i","Math","min","push","id","join","$5dc247100a59b44f$var$getSome","innerHTML","refreshMovieList","this","$5dc247100a59b44f$var$liPrev","$5dc247100a59b44f$var$liNext","addEventListener","e","target","tagName","alert"],"version":3,"file":"index.3156a393.js.map"}